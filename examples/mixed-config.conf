# 混合更新模式配置示例
# 同时更新DNS记录和配置文件，按配置顺序执行

# Default check interval in seconds (兼容旧版本，建议使用下面的分离配置)
check_interval = 600

# DNS更新检查间隔 (seconds, default: 3600 = 60 minutes)
dns_check_interval = 3600

# 文件更新检查间隔 (seconds, default: 600 = 10 minutes)
file_check_interval = 600

[ip_detection]
timeout = 30
# API endpoints for getting public IP (tried first) - 中国大陆可访问服务
api_endpoints = [
    "https://myip.ipip.net",
    "https://ddns.oray.com/checkip",
    "https://ip.3322.net",
    "https://members.3322.org/dyndns/getip"
]

# Web endpoints for getting public IP (fallback) - 中国大陆可访问服务
web_endpoints = [
    "https://ip.cn/api/index?ip&type=0",
    "https://ip4.seeip.org"
]

[retry]
interval = 60
max_retries = -1

[logging]
level = "info"
file_path = "/var/log/ip_updater/ip_updater.log"
max_size = 100
max_age = 30

# DNS更新配置（按配置顺序执行）

# 1. 首先更新主域名（阿里云）
[[dns_updater]]
name = "primary-domain"
provider = "aliyun"
access_key = "your_aliyun_access_key"
secret_key = "your_aliyun_secret_key"
domain = "example.com"
[[dns_updater.record]]
name = "@"
type = "A"
ttl = 600
[[dns_updater.record]]
name = "www"
type = "A"
ttl = 600

# 2. 然后更新备用域名（Cloudflare）
[[dns_updater]]
name = "backup-domain"
provider = "cloudflare"
token = "your_cloudflare_token"
domain = "backup-example.com"
[[dns_updater.record]]
name = "@"
type = "A"
ttl = 600

# 文件更新配置（DNS更新完成后执行，按配置顺序）

# 3. 更新Nginx配置
[[file_updater]]
name = "nginx-main"
file_path = "/etc/nginx/sites-available/default.json"
format = "json"
key_path = "server/listen_ip"
backup = true

# 4. 更新应用配置
[[file_updater]]
name = "app-config"
file_path = "/opt/myapp/config.toml"
format = "toml"
key_path = "server/bind_address"
backup = true

# 5. 更新Docker Compose配置
[[file_updater]]
name = "docker-compose"
file_path = "/opt/containers/docker-compose.yml"
format = "yaml"
key_path = "services/webapp/environment/EXTERNAL_IP"
backup = true

# 6. 更新系统服务配置
[[file_updater]]
name = "system-service"
file_path = "/etc/myservice/config.ini"
format = "ini"
key_path = "network/public_ip"
backup = true