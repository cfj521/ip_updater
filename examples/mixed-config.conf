# 混合更新模式配置示例
# 同时更新DNS记录和配置文件，按配置顺序执行

check_interval = 300

[ip_detection]
timeout = 30
api_endpoints = [
    "https://api.ipify.org",
    "https://ipv4.icanhazip.com",
    "https://checkip.amazonaws.com"
]
web_endpoints = [
    "https://ifconfig.me/ip",
    "https://ipinfo.io/ip"
]

[retry]
interval = 60
max_retries = -1

[logging]
level = "info"
file_path = "/var/log/ip_updater/ip_updater.log"
max_size = 100
max_age = 30

# DNS更新配置（按配置顺序执行）

# 1. 首先更新主域名（阿里云）
[[dns_updater]]
name = "primary-domain"
provider = "aliyun"
access_key = "your_aliyun_access_key"
secret_key = "your_aliyun_secret_key"
domain = "example.com"
[[dns_updater.record]]
name = "@"
type = "A"
ttl = 300
[[dns_updater.record]]
name = "www"
type = "A"
ttl = 300

# 2. 然后更新备用域名（Cloudflare）
[[dns_updater]]
name = "backup-domain"
provider = "cloudflare"
token = "your_cloudflare_token"
domain = "backup-example.com"
[[dns_updater.record]]
name = "@"
type = "A"
ttl = 1

# 文件更新配置（DNS更新完成后执行，按配置顺序）

# 3. 更新Nginx配置
[[file_updater]]
name = "nginx-main"
file_path = "/etc/nginx/sites-available/default.json"
format = "json"
key_path = "server/listen_ip"
backup = true

# 4. 更新应用配置
[[file_updater]]
name = "app-config"
file_path = "/opt/myapp/config.toml"
format = "toml"
key_path = "server/bind_address"
backup = true

# 5. 更新Docker Compose配置
[[file_updater]]
name = "docker-compose"
file_path = "/opt/containers/docker-compose.yml"
format = "yaml"
key_path = "services/webapp/environment/EXTERNAL_IP"
backup = true

# 6. 更新系统服务配置
[[file_updater]]
name = "system-service"
file_path = "/etc/myservice/config.ini"
format = "ini"
key_path = "network/public_ip"
backup = true